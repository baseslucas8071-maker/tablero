name: Update status.json

on:
  repository_dispatch:
    types: [update-status]

permissions:
  contents: write   # ⬅️ Necesario para poder hacer commit/push
  actions: read

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Write status.json using GitHub API (github-script)
        uses: actions/github-script@v6
        with:
          script: |
            // Log completo del evento para depuración
            core.info('EVENT RECEIVED: ' + JSON.stringify(github.event, null, 2));

            // Tomamos client_payload si existe; si no, intentamos usar github.event directamente
            const payload = context.payload.client_payload ?? context.payload;

            // Si payload está vacío aún, lanzar un error claro
            if (!payload || (typeof payload === 'object' && Object.keys(payload).length === 0)) {
              throw new Error('No client_payload found in repository_dispatch. Compruebe Power Automate client payload.');
            }

            const content = JSON.stringify(payload, null, 2);
            const path = 'status.json';
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            try {
              const response = await github.rest.repos.getContent({ owner, repo, path });
              const sha = response.data.sha;
              await github.rest.repos.createOrUpdateFileContents({
                owner, repo, path,
                message: 'Update status.json from repository_dispatch',
                content: Buffer.from(content).toString('base64'),
                sha,
              });
              core.info('status.json actualizado (commit).');
            } catch (err) {
              if (err.status === 404) {
                await github.rest.repos.createOrUpdateFileContents({
                  owner, repo, path,
                  message: 'Create status.json from repository_dispatch',
                  content: Buffer.from(content).toString('base64'),
                });
                core.info('status.json creado.');
              } else {
                throw err;
              }
            }


